export const isConfig = input => {
    const $io0 = input => (undefined === input.remoteConfig || "boolean" === typeof input.remoteConfig) && (undefined === input.configURL || "string" === typeof input.configURL) && (undefined === input.baseConfigURL || "string" === typeof input.baseConfigURL) && (undefined === input.cacheTime || "number" === typeof input.cacheTime) && (undefined === input.source || "object" === typeof input.source && null !== input.source && $io1(input.source)) && (undefined === input.inputs || Array.isArray(input.inputs) && input.inputs.every(elem => "object" === typeof elem && null !== elem && $iu0(elem))) && (undefined === input.news || Array.isArray(input.news) && input.news.every(elem => "object" === typeof elem && null !== elem && $io9(elem))) && (undefined === input.overrides || "object" === typeof input.overrides && null !== input.overrides && false === Array.isArray(input.overrides) && $io11(input.overrides));
    const $io1 = input => "string" === typeof input.name && "string" === typeof input.identifier && (undefined === input.sourceURL || "string" === typeof input.sourceURL);
    const $io2 = input => "github" === input.type && "string" === typeof input.repo && "string" === typeof input.tag && (undefined === input.allowPrereleases || "boolean" === typeof input.allowPrereleases) && (undefined === input.assetRegex || "string" === typeof input.assetRegex) && (undefined === input.dateLambda || "string" === typeof input.dateLambda) && (undefined === input.versionLambda || "string" === typeof input.versionLambda) && (undefined === input.changelogLambda || "string" === typeof input.changelogLambda) && ("object" === typeof input.appMetadata && null !== input.appMetadata && $io3(input.appMetadata));
    const $io3 = input => "string" === typeof input.name && "string" === typeof input.bundleIdentifier && "string" === typeof input.developerName && (undefined === input.subtitle || "string" === typeof input.subtitle) && "string" === typeof input.localizedDescription && "string" === typeof input.iconURL && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.permissions || Array.isArray(input.permissions) && input.permissions.every(elem => "object" === typeof elem && null !== elem && $io4(elem))) && (undefined === input.screenshotURLs || Array.isArray(input.screenshotURLs) && input.screenshotURLs.every(elem => "string" === typeof elem));
    const $io4 = input => ("photos" === input.type || "camera" === input.type || "location" === input.type || "contacts" === input.type || "reminders" === input.type || "music" === input.type || "microphone" === input.type || "speech-recognition" === input.type || "background-audio" === input.type || "background-fetch" === input.type || "bluetooth" === input.type || "network" === input.type || "calendars" === input.type || "faceid" === input.type || "siri" === input.type || "motion" === input.type) && "string" === typeof input.usageDescription;
    const $io5 = input => "source" === input.type && "string" === typeof input.url && (undefined === input.allApps || "boolean" === typeof input.allApps) && (undefined === input.appBundleIds || Array.isArray(input.appBundleIds) && input.appBundleIds.every(elem => "string" === typeof elem)) && (undefined === input.allNews || "boolean" === typeof input.allNews) && (undefined === input.newsIds || Array.isArray(input.newsIds) && input.newsIds.every(elem => "string" === typeof elem));
    const $io6 = input => "raw" === input.type && ("object" === typeof input.app && null !== input.app && $io7(input.app)) && (undefined === input.news || Array.isArray(input.news) && input.news.every(elem => "object" === typeof elem && null !== elem && $io9(elem)));
    const $io7 = input => "string" === typeof input.name && "string" === typeof input.bundleIdentifier && "string" === typeof input.developerName && (undefined === input.subtitle || "string" === typeof input.subtitle) && "string" === typeof input.localizedDescription && "string" === typeof input.iconURL && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.permissions || Array.isArray(input.permissions) && input.permissions.every(elem => "object" === typeof elem && null !== elem && $io4(elem))) && (undefined === input.screenshotURLs || Array.isArray(input.screenshotURLs) && input.screenshotURLs.every(elem => "string" === typeof elem)) && (undefined === input.beta || "boolean" === typeof input.beta) && (Array.isArray(input.versions) && input.versions.every(elem => "object" === typeof elem && null !== elem && $io8(elem))) && (undefined === input.version || "string" === typeof input.version) && (undefined === input.versionDate || "string" === typeof input.versionDate) && (undefined === input.versionDescription || "string" === typeof input.versionDescription) && (undefined === input.downloadURL || "string" === typeof input.downloadURL) && (undefined === input.size || "number" === typeof input.size);
    const $io8 = input => "string" === typeof input.version && "string" === typeof input.date && (undefined === input.localizedDescription || "string" === typeof input.localizedDescription) && "string" === typeof input.downloadURL && "number" === typeof input.size && (undefined === input.minOSVersion || "string" === typeof input.minOSVersion) && (undefined === input.maxOSVersion || "string" === typeof input.maxOSVersion);
    const $io9 = input => "string" === typeof input.title && "string" === typeof input.identifier && "string" === typeof input.caption && "string" === typeof input.date && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.imageURL || "string" === typeof input.imageURL) && (undefined === input.url || "string" === typeof input.url) && (undefined === input.appID || "string" === typeof input.appID) && (undefined === input.notify || "boolean" === typeof input.notify);
    const $io10 = input => "custom" === input.type && "string" === typeof input.functionName;
    const $io11 = input => Object.keys(input).every(key => {
        const value = input[key];
        if (undefined === value)
            return true;
        if (RegExp(/(.*)/).test(key))
            return true;
        return true;
    });
    const $iu0 = input => (() => {
        if ("github" === input.type)
            return $io2(input);
        if ("source" === input.type)
            return $io5(input);
        if ("raw" === input.type)
            return $io6(input);
        if ("custom" === input.type)
            return $io10(input);
        return false;
    })();
    return "object" === typeof input && null !== input && false === Array.isArray(input) && $io0(input);
};
export const isGitHubInput = input => {
    const $io0 = input => "github" === input.type && "string" === typeof input.repo && "string" === typeof input.tag && (undefined === input.allowPrereleases || "boolean" === typeof input.allowPrereleases) && (undefined === input.assetRegex || "string" === typeof input.assetRegex) && (undefined === input.dateLambda || "string" === typeof input.dateLambda) && (undefined === input.versionLambda || "string" === typeof input.versionLambda) && (undefined === input.changelogLambda || "string" === typeof input.changelogLambda) && ("object" === typeof input.appMetadata && null !== input.appMetadata && $io1(input.appMetadata));
    const $io1 = input => "string" === typeof input.name && "string" === typeof input.bundleIdentifier && "string" === typeof input.developerName && (undefined === input.subtitle || "string" === typeof input.subtitle) && "string" === typeof input.localizedDescription && "string" === typeof input.iconURL && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.permissions || Array.isArray(input.permissions) && input.permissions.every(elem => "object" === typeof elem && null !== elem && $io2(elem))) && (undefined === input.screenshotURLs || Array.isArray(input.screenshotURLs) && input.screenshotURLs.every(elem => "string" === typeof elem));
    const $io2 = input => ("photos" === input.type || "camera" === input.type || "location" === input.type || "contacts" === input.type || "reminders" === input.type || "music" === input.type || "microphone" === input.type || "speech-recognition" === input.type || "background-audio" === input.type || "background-fetch" === input.type || "bluetooth" === input.type || "network" === input.type || "calendars" === input.type || "faceid" === input.type || "siri" === input.type || "motion" === input.type) && "string" === typeof input.usageDescription;
    return "object" === typeof input && null !== input && $io0(input);
};
export const isSourceInput = input => {
    const $io0 = input => "source" === input.type && "string" === typeof input.url && (undefined === input.allApps || "boolean" === typeof input.allApps) && (undefined === input.appBundleIds || Array.isArray(input.appBundleIds) && input.appBundleIds.every(elem => "string" === typeof elem)) && (undefined === input.allNews || "boolean" === typeof input.allNews) && (undefined === input.newsIds || Array.isArray(input.newsIds) && input.newsIds.every(elem => "string" === typeof elem));
    return "object" === typeof input && null !== input && $io0(input);
};
export const isRawInput = input => {
    const $io0 = input => "raw" === input.type && ("object" === typeof input.app && null !== input.app && $io1(input.app)) && (undefined === input.news || Array.isArray(input.news) && input.news.every(elem => "object" === typeof elem && null !== elem && $io4(elem)));
    const $io1 = input => "string" === typeof input.name && "string" === typeof input.bundleIdentifier && "string" === typeof input.developerName && (undefined === input.subtitle || "string" === typeof input.subtitle) && "string" === typeof input.localizedDescription && "string" === typeof input.iconURL && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.permissions || Array.isArray(input.permissions) && input.permissions.every(elem => "object" === typeof elem && null !== elem && $io2(elem))) && (undefined === input.screenshotURLs || Array.isArray(input.screenshotURLs) && input.screenshotURLs.every(elem => "string" === typeof elem)) && (undefined === input.beta || "boolean" === typeof input.beta) && (Array.isArray(input.versions) && input.versions.every(elem => "object" === typeof elem && null !== elem && $io3(elem))) && (undefined === input.version || "string" === typeof input.version) && (undefined === input.versionDate || "string" === typeof input.versionDate) && (undefined === input.versionDescription || "string" === typeof input.versionDescription) && (undefined === input.downloadURL || "string" === typeof input.downloadURL) && (undefined === input.size || "number" === typeof input.size);
    const $io2 = input => ("photos" === input.type || "camera" === input.type || "location" === input.type || "contacts" === input.type || "reminders" === input.type || "music" === input.type || "microphone" === input.type || "speech-recognition" === input.type || "background-audio" === input.type || "background-fetch" === input.type || "bluetooth" === input.type || "network" === input.type || "calendars" === input.type || "faceid" === input.type || "siri" === input.type || "motion" === input.type) && "string" === typeof input.usageDescription;
    const $io3 = input => "string" === typeof input.version && "string" === typeof input.date && (undefined === input.localizedDescription || "string" === typeof input.localizedDescription) && "string" === typeof input.downloadURL && "number" === typeof input.size && (undefined === input.minOSVersion || "string" === typeof input.minOSVersion) && (undefined === input.maxOSVersion || "string" === typeof input.maxOSVersion);
    const $io4 = input => "string" === typeof input.title && "string" === typeof input.identifier && "string" === typeof input.caption && "string" === typeof input.date && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.imageURL || "string" === typeof input.imageURL) && (undefined === input.url || "string" === typeof input.url) && (undefined === input.appID || "string" === typeof input.appID) && (undefined === input.notify || "boolean" === typeof input.notify);
    return "object" === typeof input && null !== input && $io0(input);
};
export const isCustomInput = input => {
    const $io0 = input => "custom" === input.type && "string" === typeof input.functionName;
    return "object" === typeof input && null !== input && $io0(input);
};
export const isSource = input => {
    const $io0 = input => "string" === typeof input.name && "string" === typeof input.identifier && (undefined === input.sourceURL || "string" === typeof input.sourceURL) && (Array.isArray(input.apps) && input.apps.every(elem => "object" === typeof elem && null !== elem && $io1(elem))) && (undefined === input.news || Array.isArray(input.news) && input.news.every(elem => "object" === typeof elem && null !== elem && $io4(elem)));
    const $io1 = input => "string" === typeof input.name && "string" === typeof input.bundleIdentifier && "string" === typeof input.developerName && (undefined === input.subtitle || "string" === typeof input.subtitle) && "string" === typeof input.localizedDescription && "string" === typeof input.iconURL && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.permissions || Array.isArray(input.permissions) && input.permissions.every(elem => "object" === typeof elem && null !== elem && $io2(elem))) && (undefined === input.screenshotURLs || Array.isArray(input.screenshotURLs) && input.screenshotURLs.every(elem => "string" === typeof elem)) && (undefined === input.beta || "boolean" === typeof input.beta) && (Array.isArray(input.versions) && input.versions.every(elem => "object" === typeof elem && null !== elem && $io3(elem))) && (undefined === input.version || "string" === typeof input.version) && (undefined === input.versionDate || "string" === typeof input.versionDate) && (undefined === input.versionDescription || "string" === typeof input.versionDescription) && (undefined === input.downloadURL || "string" === typeof input.downloadURL) && (undefined === input.size || "number" === typeof input.size);
    const $io2 = input => ("photos" === input.type || "camera" === input.type || "location" === input.type || "contacts" === input.type || "reminders" === input.type || "music" === input.type || "microphone" === input.type || "speech-recognition" === input.type || "background-audio" === input.type || "background-fetch" === input.type || "bluetooth" === input.type || "network" === input.type || "calendars" === input.type || "faceid" === input.type || "siri" === input.type || "motion" === input.type) && "string" === typeof input.usageDescription;
    const $io3 = input => "string" === typeof input.version && "string" === typeof input.date && (undefined === input.localizedDescription || "string" === typeof input.localizedDescription) && "string" === typeof input.downloadURL && "number" === typeof input.size && (undefined === input.minOSVersion || "string" === typeof input.minOSVersion) && (undefined === input.maxOSVersion || "string" === typeof input.maxOSVersion);
    const $io4 = input => "string" === typeof input.title && "string" === typeof input.identifier && "string" === typeof input.caption && "string" === typeof input.date && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.imageURL || "string" === typeof input.imageURL) && (undefined === input.url || "string" === typeof input.url) && (undefined === input.appID || "string" === typeof input.appID) && (undefined === input.notify || "boolean" === typeof input.notify);
    return "object" === typeof input && null !== input && $io0(input);
};
export const isApp = input => {
    const $io0 = input => "string" === typeof input.name && "string" === typeof input.bundleIdentifier && "string" === typeof input.developerName && (undefined === input.subtitle || "string" === typeof input.subtitle) && "string" === typeof input.localizedDescription && "string" === typeof input.iconURL && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.permissions || Array.isArray(input.permissions) && input.permissions.every(elem => "object" === typeof elem && null !== elem && $io1(elem))) && (undefined === input.screenshotURLs || Array.isArray(input.screenshotURLs) && input.screenshotURLs.every(elem => "string" === typeof elem)) && (undefined === input.beta || "boolean" === typeof input.beta) && (Array.isArray(input.versions) && input.versions.every(elem => "object" === typeof elem && null !== elem && $io2(elem))) && (undefined === input.version || "string" === typeof input.version) && (undefined === input.versionDate || "string" === typeof input.versionDate) && (undefined === input.versionDescription || "string" === typeof input.versionDescription) && (undefined === input.downloadURL || "string" === typeof input.downloadURL) && (undefined === input.size || "number" === typeof input.size);
    const $io1 = input => ("photos" === input.type || "camera" === input.type || "location" === input.type || "contacts" === input.type || "reminders" === input.type || "music" === input.type || "microphone" === input.type || "speech-recognition" === input.type || "background-audio" === input.type || "background-fetch" === input.type || "bluetooth" === input.type || "network" === input.type || "calendars" === input.type || "faceid" === input.type || "siri" === input.type || "motion" === input.type) && "string" === typeof input.usageDescription;
    const $io2 = input => "string" === typeof input.version && "string" === typeof input.date && (undefined === input.localizedDescription || "string" === typeof input.localizedDescription) && "string" === typeof input.downloadURL && "number" === typeof input.size && (undefined === input.minOSVersion || "string" === typeof input.minOSVersion) && (undefined === input.maxOSVersion || "string" === typeof input.maxOSVersion);
    return "object" === typeof input && null !== input && $io0(input);
};
export const isNews = input => {
    const $io0 = input => "string" === typeof input.title && "string" === typeof input.identifier && "string" === typeof input.caption && "string" === typeof input.date && (undefined === input.tintColor || "string" === typeof input.tintColor) && (undefined === input.imageURL || "string" === typeof input.imageURL) && (undefined === input.url || "string" === typeof input.url) && (undefined === input.appID || "string" === typeof input.appID) && (undefined === input.notify || "boolean" === typeof input.notify);
    return "object" === typeof input && null !== input && $io0(input);
};
